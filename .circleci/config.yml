version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10.15.1-browsers
    steps:
      - checkout
      # getsubmodules
      - run:
          name: "pull-submodules"
          command: |
            git submodule update --init --recursive
      # Installing ionic cli
      - run:
          name: install-angular/cli
          command: 'sudo yarn global add @angular/cli'
          when: always
      # Creating result folder
      - run:
          name: create-result-folder
          command: 'mkdir result'
          when: always
      # Deleting dependencies and lock files
      - run:
          name: prepare-ang8
          command: 'cd ./projects/c8osdkangular && ([ -f ./yarn.lock ] && rm yarn.lock || echo "No yarn.lock file found") && ([ -d ./node_modules ] && rm -rf ./node_modules || echo "No node_modules directory found")'
          when: always
      # Get package.json
      - run:
          name: copy-package-ang8
          command: 'cd ./projects/c8osdkangular && rm ./package.json && cp ./packages/packageANG8.json ./package.json &&  echo "project will be build with the following package.json: " && cat ./package.json'
          when: always
      # Installing dependencies
      - run:
          name: install-dep-ang8
          command: 'yarn install && cd ./projects/c8osdkangular && yarn install  && cd ./src/c8osdk-js-core && yarn install'
          when: always
      # TESTANGULAR8
      - run:
          name: test-ang8
          command: 'cd ./projects/c8osdkangular && ng test c8osdkangular --watch=false 2>&1 | tee -a ../../result/angular8.txt'
          when: always
      # Check for results
      - run:
          name: eval-ang8
          command: '(grep -qs "TOTAL: 68 SUCCESS" in ./result/angular7.txt && cp ./.circleci/results/icons/passed.png ./result/angular8.png || cp ./.circleci/results/icons/failed.png ./result/angular8.png)'
          when: always
      # Deleting dependencies and lock files
      - run:
          name: prepare-ang7
          command: 'cd ./projects/c8osdkangular && ([ -f ./yarn.lock ] && rm yarn.lock || echo "No yarn.lock file found") && ([ -d ./node_modules ] && rm -rf ./node_modules || echo "No node_modules directory found")'
          when: always
      # Get package.json
      - run:
          name: copy-package-ang7
          command: 'cd ./projects/c8osdkangular && rm ./package.json && cp ./packages/packageANG7.json ./package.json &&  echo "project will be build with the following package.json: " && cat ./package.json'
          when: always
      # Installing dependencies
      - run:
          name: install-dep-ang7
          command: 'yarn install && cd ./projects/c8osdkangular && yarn install  && cd ./src/c8osdk-js-core && yarn install'
          when: always
      # TESTANGULAR7
      - run:
          name: test-ang7
          command: 'cd ./projects/c8osdkangular && ng test c8osdkangular --watch=false 2>&1 | tee -a ../../result/angular7.txt'
          when: always
      # Check for results
      - run:
          name: eval-ang7
          command: '(grep -qs "TOTAL: 68 SUCCESS" in ./result/angular7.txt && cp ./.circleci/results/icons/passed.png ./result/angular7.png || cp ./.circleci/results/icons/failed.png ./result/angular7.png)'
          when: always
    # Deleting dependencies and lock files
      - run:
          name: prepare-ang6
          command: '([ -f ./projects/c8osdkangular/yarn.lock ] && rm ./projects/c8osdkangular/yarn.lock || echo "No yarn.lock file found") && ([ -d ./projects/c8osdkangular/node_modules ] && rm -rf ./projects/c8osdkangular/node_modules || echo "No node_modules directory found")'
          when: always
      # Get package.json
      - run:
          name: copy-package-ang6
          command: 'cd ./projects/c8osdkangular && rm ./package.json && cp ./packages/packageANG6.json ./package.json &&  echo "project will be build with the following package.json: " && cat ./package.json'
          when: always
      # Installing dependencies
      - run:
          name: install-dep-ang6
          command: 'cd ./projects/c8osdkangular && yarn install &&  cd ./src/c8osdk-js-core && yarn install'
          when: always
      # TESTANGULAR7
      - run:
          name: test-ang6
          command: 'cd ./projects/c8osdkangular && ng test c8osdkangular --watch=false 2>&1 | tee -a ../../result/angular6.txt'
          when: always
      # Check for results
      - run:
          name: eval-ang6
          command: '(grep -qs "TOTAL: 68 SUCCESS" in ./result/angular6.txt && cp ./.circleci/results/icons/passed.png ./result/angular6.png || cp ./.circleci/results/icons/failed.png ./result/angular6.png)'
          when: always
    # Deleting dependencies and lock files
      - run:
          name: prepare-ang5
          command: '([ -f ./projects/c8osdkangular/yarn.lock ] && rm ./projects/c8osdkangular/yarn.lock || echo "No yarn.lock file found") && ([ -d ./projects/c8osdkangular/node_modules ] && rm -rf ./projects/c8osdkangular/node_modules || echo "No node_modules directory found")'
          when: always
      # Get package.json
      - run:
          name: copy-package-ang5
          command: 'cd ./projects/c8osdkangular && rm ./package.json && cp ./packages/packageANG5.json ./package.json &&  echo "project will be build with the following package.json: " && cat ./package.json'
          when: always
      # Installing dependencies
      - run:
          name: install-dep-ang5
          command: 'cd ./projects/c8osdkangular && yarn install  && cd ./src/c8osdk-js-core && yarn install'
          when: always
      # TESTANGULAR7
      - run:
          name: test-ang5
          command: 'cd ./projects/c8osdkangular && ng test c8osdkangular --watch=false 2>&1 | tee -a ../../result/angular5.txt'
          when: always
      # Check for results
      - run:
          name: eval-ang5
          command: '(grep -qs "TOTAL: 68 SUCCESS" in ./result/angular5.txt && cp ./.circleci/results/icons/passed.png ./result/angular5.png || cp ./.circleci/results/icons/failed.png ./result/angular5.png)'
          when: always
      - store_artifacts:
          path: ./result/